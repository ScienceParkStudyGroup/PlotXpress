df_diff <- df %>%
filter (FP != 'mNg')
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=intensity)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = intensity, cond = FP)
View(df_diff)
View(df_values)
View(df_diff)
View(df_controls)
View(df_values)
df_values  %>% full_join(df_controls, by='Replica')
bind_cols(df_controls,df_values)
View(df_controls)
View(df_values)
bind_cols(df_controls,df_values)
bind_cols(df_values, df_controls)
?bind_cols
left_join(df_controls,df_values)
left_join(df_controls,df_values,by='Replica')
inner_join(df_controls,df_values,by='Replica')
semi_join(df_controls,df_values,by='Replica')
semi_join(df_values,df_controls,by='Replica')
sessionInfo()
df <- read_excel("Desktop/Toy-data/SuperPlotsOfData_Lior.xlsx")
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = intensity, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=intensity)
df_diff <- df_values  %>% full_join(df_controls, by='Replica')  %>% unite('Condition' ,c("cond","Condition"), sep = " vs ")
View(df_diff)
df_summ <- df %>% group_by(FP, Recplicate) %>% summarise(mean=mean(intensity))
df_summ <- df %>% group_by(FP, Recplica) %>% summarise(mean=mean(intensity))
df_summ <- df %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
View(df_summ)
View(df_summ)
df_raw <- read_excel("Desktop/Toy-data/SuperPlotsOfData_Lior.xlsx")
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = intensity, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=intensity)
View(df_controls)
View(df_controls)
View(df_values)
View(df_controls)
View(df_values)
df_raw <- read_excel("Desktop/Toy-data/SuperPlotsOfData_Lior.xlsx")
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = intensity, cond = FP)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
View(df_controls)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
View(df_values)
df_values  %>% full_join(df_controls, by='Replica')
df_diff <- df_values  %>% full_join(df_controls, by='Replica')
df_diff$Condition
paste(df_diff$Condition,"xx")
df_diff$Condition <- paste(df_diff$Condition, "vs","mNG")
df_diff
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
df_raw <- read_excel("Desktop/Toy-data/SuperPlotsOfData_Lior.xlsx")
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
df_diff <- df_values  %>% full_join(df_controls, by='Replica')
df_diff$Condition <- paste(df_diff$Condition, "vs","mNG")
View(df_diff)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
View(df_controls)
View(df_values)
df_values  %>% full_join(df_controls, by='Replica')
full_join(df_controls, df_values, by='Replica')
df_values  %>% groupr_by(Condition) %>% full_join(df_controls, by='Replica')
df_values  %>% group_by(Condition) %>% full_join(df_controls, by='Replica')
full_join(df_values,df_controls, by='Replica')
df_diff <-    full_join(df_controls,df_values, by='Replica')
full_join(df_controls,df_values, by='Replica')
df_diff <-  df_values %>% full_join(df_controls, by='Replica')
df_values %>% full_join(df_controls, by='Replica')
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity), n=n())
View(df)
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity)
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df
df %>% spread(FP, mean
)
df %>% spread(FP, mean)
df_spread <- df %>% spread(FP, mean)
View(df_spread)
df_spread %>% gather(Condition, mean)
df_spread %>% gather(Condition, mean, -Replicate)
df <- df_spread %>% gather(Condition, mean, -Replicate)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
df_diff <-  df_values %>% full_join(df_controls, by='Replica')
full_join(df_controls, df_values, by='Replica')
df_diff$Condition <- paste(df_diff$Condition, "vs","mNG")
View(df_diff)
View(df_controls)
View(df)
View(df)
?gather()
df <- df_spread %>% gather(Condition, mean, -Replicate, na.rm = FALSE)
View(df)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
df <- df_spread %>% gather(FP, mean, -Replicate, na.rm = FALSE)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
View(df_controls)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
View(df_values)
df_diff <-  df_values %>% full_join(df_controls, by='Replica')
View(df_diff)
df_diff <- df_values %>% full_join(df_controls, by='Replica') %>% unite('Condition' ,c("cond","Condition"), sep = " vs ")
View(df_diff)
df_raw <- read_excel("Desktop/Toy-data/SuperPlotsOfData_Lior.xlsx")
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df <- df %>% spread(FP, mean) %>% gather(FP, mean, -Replicate, na.rm = FALSE)
View(df)
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
df_diff <- df_values %>% full_join(df_controls, by='Replica') %>% unite('Condition' ,c("cond","Condition"), sep = " vs ")
View(df_diff)
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
df_controls
df_controls$control_value
length(df_controls$control_value)
length(na.omit(df_controls$control_value))
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
?pivot_longer()
?gather
?pivot_longer()
?gather
?pivot_longer()
df %>% spread(FP, mean) %>% pivot_longer(!Replicate, names_to="FP", values_to = "mean")
?pivot_wider()
df %>% pivot_wider(names_from = "FP", values_from = "mean") %>% pivot_longer(!Replicate, names_to="FP", values_to = "mean")
df_raw <- read_excel("Desktop/Toy-data/SuperPlotsOfData_Lior.xlsx")
df <- df_raw %>% group_by(FP, Replicate) %>% summarise(mean=mean(intensity))
df <- df %>% pivot_wider(names_from = "FP", values_from = "mean") %>% pivot_longer(!Replicate, names_to="FP", values_to = "mean")
df_controls <- df %>% filter(FP=='mNg') %>% select(Replica = Replicate, control_value = mean, cond = FP)
df_values <- df %>%
filter (FP != 'mNg') %>%
select(Condition=FP,Replica = Replicate,Value=mean)
df_diff <- df_values %>% full_join(df_controls, by='Replica') %>% unite('Condition' ,c("cond","Condition"), sep = " vs ")
View(df_diff)
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
?pivot_longer()
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
shiny::runApp('surfdrive/Shiny-project/polarPlotteR')
shiny::runApp('surfdrive/Shiny-project/SuperPlotsOfData')
x <- c(1,2,3,4,2)
shapiro.test(x)
x <- c(1,1,1,1,1,1)
shapiro.test(x)
x <- c(0,0,0,0)
shapiro.test(x)
unique(x)
x <- c(1,1,1,1,1,1)
unique(x)
length(unique(x))
x <- c(0,0,0,0)
length(unique(x))
x <- c(1,2,3,4,2)
length(unique(x))
x <- NULL
length(unique(x))
x <- c(1,2)
x <- c(1,2,1,2,1,2)
length(unique(x))
shapiro.test(x)
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
windowsFonts()
install.packages("extrafont")
library(extrafont)
fonts()
loadfonts(device = "pdf", quiet = FALSE)
fonts()
theme(title = element_text(family = 'Helvetica')) # whatever font you want
choose_font(c("GillSans",  "Verdana", "sans"), quiet = TRUE)
theme(title = element_text(family = 'NimbusMon')) # whatever font you want
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotsOfPhasors')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
shiny::runApp('surfdrive/Shiny-project/BA-plotteR')
?read.delim
??read.delim
??read_delim
??read.delim
?read.delim
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/PlotTwist')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
?filter
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/PlotXpress')
shiny::runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
?selectizeInput
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotTwist')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
y <- c(1,2)
class(y)
y <- c("1","2")
class(y)
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
runApp('surfdrive/Shiny-project/PlotsOfData')
seq(1:3)
paste0('cell_',seq(1:10))
1:10
paste0('cell_',1:10)
c <-
paste0('cell_',1:10)
c
install.packages("ks")
library(ggplot2)
set.seed(1001)
d <- data.frame(x=rnorm(1000),y=rnorm(1000))
kd <- ks::kde(d, compute.cont=TRUE)
contour_95 <- with(kd, contourLines(x=eval.points[[1]], y=eval.points[[2]],
z=estimate, levels=cont["5%"])[[1]])
contour_95 <- data.frame(contour_95)
ggplot(data=d, aes(x, y)) +
geom_point() +
geom_path(aes(x, y), data=contour_95) +
theme_bw()
head(mtcars)
head(mpg)
library(tidyverse)
head(mpg)
ggplot(data=mtcars,aes(x=as.factor(cyl), y=mpg))+geom_boxplot
ggplot(data=mtcars,aes(x=as.factor(cyl), y=mpg))+geom_boxplot()
ggplot(data=mpg,aes(x=as.factor(class), y=displ))+geom_boxplot()
mpg$class <- factor(mpg$class, levels=c('2seater','midsize','minivan'))
ggplot(data=mpg,aes(x=as.factor(class), y=displ))+geom_boxplot()
mpg
detach("package:tidyverse", unload = TRUE)
library(tidyverse)
mpg
shiny::runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
shiny::runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
x <- c('x', 'y', 'y', 'y', 'z')
unique(x)
unique(x) == "x"
unique(x) == "y"
length(unique(x))
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
x <- data.frame(y,x,firefly=1,renilla=1)
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
data.frame(y,x,firefly=1,renilla=1)
data.frame(y=1,x=1,firefly=1,renilla=1)
data.frame(y=NULL,x=NULL,firefly=1,renilla=1)
data.frame(y=NA,x=NA,firefly=1,renilla=1)
x <- data.frame(y=NA,x=NA,firefly=1,renilla=1)
dim(x)
dim(x)[1]
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('~/surfdrive/Shiny-project/VolcaNoseR')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
shiny::runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/BA-plotteR')
runApp('surfdrive/Shiny-project/BA-plotteR')
shiny::runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/PlotXpress')
shiny::runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('~/surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/PlotXpress')
runApp('surfdrive/Shiny-project/SuperPlotsOfData')
runApp('surfdrive/Shiny-project/PlotXpress')
setwd("~/surfdrive/Shiny-project/PlotXpress")
df <- read.csv("Design_tidy_EXAMPLE2.csv")
ls
df
df$tx
if (df$tx == NULL) df$tx <- 1
if (df$tx == NULL) {df$tx <- 1}
(is.null(df$t))
(is.null(df$tx))
(is.null(df$treatment1))
if (is.null(df$t)) {df$t <- "NA"}
df
